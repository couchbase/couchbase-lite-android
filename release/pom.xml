<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
         http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.couchbase.lite</groupId>
    <artifactId>couchbase-lite-android</artifactId>
    <version>${REVISION}</version>
    <packaging>jar</packaging>

    <properties>
        <local-m2dir>${basedir}/m2</local-m2dir>
        <jackson.version>2.5.0</jackson.version>
        <commons-io.version>2.0.1</commons-io.version>
        <rhino.version>1.7R3</rhino.version>
        <servlet.version>2-3</servlet.version>
        <stateless4j.version>2.4.0</stateless4j.version>
        <okhttp.version>3.3.1</okhttp.version>
        <okio.version>1.8.0</okio.version>


        <LICENSE_DIR>${basedir}/build/license/couchbase-lite</LICENSE_DIR>
        <LICENSE_FILE>LICENSE_${EDITION}.txt</LICENSE_FILE>

        <TARGET_DIR>${local-m2dir}/com/couchbase/lite</TARGET_DIR>
        <ZIP_HOME>${basedir}/zip</ZIP_HOME>
        <EDITION>${EDITION}</EDITION>

        <AND_CLASS_AAR>couchbase-lite-android-${REVISION}.aar</AND_CLASS_AAR>
        <JAR_JAVA_CORE>couchbase-lite-java-core-${REVISION}.jar</JAR_JAVA_CORE>
        <JAR_JA_SCRIPT>couchbase-lite-java-javascript-${REVISION}.jar</JAR_JA_SCRIPT>
        <JAR_JLISTENER>couchbase-lite-java-listener-${REVISION}.jar</JAR_JLISTENER>

        <AND_CLASS_AAR_SRC>${TARGET_DIR}/couchbase-lite-android/${REVISION}/${AND_CLASS_AAR}
        </AND_CLASS_AAR_SRC>
        <JAR_SRC_JAVA_CORE>${TARGET_DIR}/couchbase-lite-java-core/${REVISION}/${JAR_JAVA_CORE}
        </JAR_SRC_JAVA_CORE>
        <JAR_SRC_JA_SCRIPT>
            ${TARGET_DIR}/couchbase-lite-java-javascript/${REVISION}/${JAR_JA_SCRIPT}
        </JAR_SRC_JA_SCRIPT>
        <JAR_SRC_JLISTENER>${TARGET_DIR}/couchbase-lite-java-listener/${REVISION}/${JAR_JLISTENER}
        </JAR_SRC_JLISTENER>

        <STAGING>${basedir}/staging</STAGING>

        <JAR_AND_CLASS>couchbase-lite-android-${REVISION}.jar</JAR_AND_CLASS>
        <JAR_SRC_AND_CLASS>
            ${basedir}/couchbase-lite-android/build/intermediates/bundles/release/classes.jar
        </JAR_SRC_AND_CLASS>
        <JAR_DST_AND_CLASS>${STAGING}/${JAR_AND_CLASS}</JAR_DST_AND_CLASS>

        <POM_AND_CLASS>couchbase-lite-android-${REVISION}.pom</POM_AND_CLASS>
        <POM_JAVA_CORE>couchbase-lite-java-core-${REVISION}.pom</POM_JAVA_CORE>
        <POM_JA_SCRIPT>couchbase-lite-java-javascript-${REVISION}.pom</POM_JA_SCRIPT>
        <POM_JLISTENER>couchbase-lite-java-listener-${REVISION}.pom</POM_JLISTENER>

        <POM_SRC_AND_CLASS>${TARGET_DIR}/couchbase-lite-android/${REVISION}/${POM_AND_CLASS}
        </POM_SRC_AND_CLASS>
        <POM_SRC_JAVA_CORE>${TARGET_DIR}/couchbase-lite-java-core/${REVISION}/${POM_JAVA_CORE}
        </POM_SRC_JAVA_CORE>
        <POM_SRC_JA_SCRIPT>
            ${TARGET_DIR}/couchbase-lite-java-javascript/${REVISION}/${POM_JA_SCRIPT}
        </POM_SRC_JA_SCRIPT>
        <POM_SRC_JLISTENER>${TARGET_DIR}/couchbase-lite-java-listener/${REVISION}/${POM_JLISTENER}
        </POM_SRC_JLISTENER>
    </properties>

    <repositories>
        <repository>
            <id>couchbase.public.repo</id>
            <url>http://files.couchbase.com/maven2</url>
        </repository>
        <repository>
            <id>couchbase.local.repo</id>
            <url>file://${local-m2dir}</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>com.couchbase.lite</groupId>
            <artifactId>couchbase-lite-android</artifactId>
            <type>aar</type>
            <version>${REVISION}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.couchbase.lite</groupId>
            <artifactId>couchbase-lite-java-core</artifactId>
            <version>${REVISION}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.couchbase.lite</groupId>
            <artifactId>couchbase-lite-java-javascript</artifactId>
            <version>${REVISION}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.couchbase.lite</groupId>
            <artifactId>couchbase-lite-java-listener</artifactId>
            <version>${REVISION}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.couchbase.lite</groupId>
            <artifactId>couchbase-lite-android-forestdb</artifactId>
            <type>aar</type>
            <version>${REVISION}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.couchbase.lite</groupId>
            <artifactId>couchbase-lite-android-sqlcipher</artifactId>
            <type>aar</type>
            <version>${REVISION}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.couchbase.lite</groupId>
            <artifactId>couchbase-lite-android-sqlite-custom</artifactId>
            <type>aar</type>
            <version>${REVISION}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <version>${okhttp.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.squareup.okio</groupId>
            <artifactId>okio</artifactId>
            <version>${okio.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.mozilla</groupId>
            <artifactId>rhino</artifactId>
            <version>${rhino.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.github.oxo42</groupId>
            <artifactId>stateless4j</artifactId>
            <version>${stateless4j.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.couchbase.cblite</groupId>
            <artifactId>servlet</artifactId>
            <version>${servlet.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.google.android</groupId>
            <artifactId>android</artifactId>
            <version>2.2.1</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>2.3.2</version>
                    <configuration>
                        <source>1.6</source>
                        <target>1.6</target>
                        <compilerArgument></compilerArgument>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.1</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <id>validate_m2</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <echo>local-m2dir: ${local-m2dir}</echo>
                                <echo>
                                    ${local-m2dir}/org/mozilla/rhino/${rhino.version}/rhino-${rhino.version}.jar
                                </echo>
                            </tasks>
                        </configuration>
                    </execution>

                    <execution>
                        <phase>clean</phase>
                        <id>clean_derived</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <delete dir="${JNI_DST_DIR}" failonerror="true" verbose="true"/>
                                <delete dir="${ZIP_HOME}" failonerror="true" verbose="true"/>
                            </tasks>
                        </configuration>
                    </execution>
                    <execution>
                        <phase>clean</phase>
                        <id>clean_jars</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <delete failonerror="true" file="${JAR_DST_AND_CLASS}"
                                        verbose="true"/>
                            </tasks>
                        </configuration>
                    </execution>

                    <execution>
                        <phase>initialize</phase>
                        <id>creat_dirs</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <mkdir dir="${STAGING}"/>
                                <mkdir dir="${JNI_DST_DIR}"/>
                                <mkdir dir="${ZIP_HOME}"/>
                            </tasks>
                        </configuration>
                    </execution>

                    <execution>
                        <phase>prepare-package</phase>
                        <id>create_android_jar</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <echo message="DEBUG:::   CREATE Android JAR"/>
                                <copy file="${JAR_SRC_AND_CLASS}" tofile="${JAR_DST_AND_CLASS}"/>
                            </tasks>
                        </configuration>
                    </execution>

                    <execution>
                        <phase>prepare-package</phase>
                        <id>copy_from_m2</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <echo message="DEBUG:::   LICENSE.TXT"/>

                                <copy flatten="true" preservelastmodified="true" todir="${ZIP_HOME}"
                                      verbose="true">
                                    <fileset dir="${LICENSE_DIR}">
                                        <include name="${LICENSE_FILE}"/>
                                    </fileset>
                                </copy>
                                <echo
                                    message="DEBUG::: MOVE  LICENSE_EDITION.TXT into LICENSE.TXT"/>
                                <move file="${ZIP_HOME}/${LICENSE_FILE}"
                                      tofile="${ZIP_HOME}/LICENSE.TXT"/>

                                <!-- locally built  -->
                                <echo message="DEBUG:::   locally built couchbase-lite JARs"/>

                                <copy file="${AND_CLASS_AAR_SRC}" flatten="true"
                                      preservelastmodified="true" todir="${ZIP_HOME}" verbose="true"/>
                                <copy file="${JAR_SRC_AND_CLASS}" flatten="true"
                                      preservelastmodified="true" todir="${ZIP_HOME}" verbose="true"/>

                                <copy file="${JAR_SRC_JAVA_CORE}" flatten="true"
                                      preservelastmodified="true" todir="${ZIP_HOME}" verbose="true"/>
                                <copy file="${JAR_SRC_JA_SCRIPT}" flatten="true"
                                      preservelastmodified="true" todir="${ZIP_HOME}" verbose="true"/>
                                <copy file="${JAR_SRC_JLISTENER}" flatten="true"
                                      preservelastmodified="true" todir="${ZIP_HOME}" verbose="true"/>

                                <copy file="${POM_SRC_AND_CLASS}" flatten="true"
                                      preservelastmodified="true" todir="${ZIP_HOME}" verbose="true"/>
                                <copy file="${POM_SRC_JAVA_CORE}" flatten="true"
                                      preservelastmodified="true" todir="${ZIP_HOME}" verbose="true"/>
                                <copy file="${POM_SRC_JA_SCRIPT}" flatten="true"
                                      preservelastmodified="true" todir="${ZIP_HOME}" verbose="true"/>
                                <copy file="${POM_SRC_JLISTENER}" flatten="true"
                                      preservelastmodified="true" todir="${ZIP_HOME}" verbose="true"/>

                                <copy
                                    file="${TARGET_DIR}/couchbase-lite-android-forestdb/${REVISION}/couchbase-lite-android-forestdb-${REVISION}.aar"
                                    flatten="true" preservelastmodified="true" todir="${ZIP_HOME}"
                                    verbose="true"/>
                                <copy
                                    file="${TARGET_DIR}/couchbase-lite-android-forestdb/${REVISION}/couchbase-lite-android-forestdb-${REVISION}.pom"
                                    flatten="true" preservelastmodified="true" todir="${ZIP_HOME}"
                                    verbose="true"/>

                                <copy
                                    file="${TARGET_DIR}/couchbase-lite-android-sqlite-custom/${REVISION}/couchbase-lite-android-sqlite-custom-${REVISION}.aar"
                                    flatten="true" preservelastmodified="true" todir="${ZIP_HOME}"
                                    verbose="true"/>
                                <copy
                                    file="${TARGET_DIR}/couchbase-lite-android-sqlite-custom/${REVISION}/couchbase-lite-android-sqlite-custom-${REVISION}.pom"
                                    flatten="true" preservelastmodified="true" todir="${ZIP_HOME}"
                                    verbose="true"/>

                                <copy
                                    file="${TARGET_DIR}/couchbase-lite-android-sqlcipher/${REVISION}/couchbase-lite-android-sqlcipher-${REVISION}.aar"
                                    flatten="true" preservelastmodified="true" todir="${ZIP_HOME}"
                                    verbose="true"/>
                                <copy
                                    file="${TARGET_DIR}/couchbase-lite-android-sqlcipher/${REVISION}/couchbase-lite-android-sqlcipher-${REVISION}.pom"
                                    flatten="true" preservelastmodified="true" todir="${ZIP_HOME}"
                                    verbose="true"/>

                                <!-- locally packaged  -->
                                <echo message="DEBUG:::   locally packaged android JARs"/>

                                <copy file="${JAR_DST_AND_CLASS}" flatten="true"
                                      preservelastmodified="true" todir="${ZIP_HOME}" verbose="true"/>

                                <!-- third-party    -->
                                <echo message="DEBUG:::   third-party"/>

                                <copy flatten="true" preservelastmodified="true" todir="${ZIP_HOME}"
                                      verbose="true">
                                    <fileset dir="${local-m2dir}">
                                        <include name="**/rhino-${rhino.version}.jar"/>
                                        <include name="**/commons-io-${commons-io.version}.jar"/>
                                        <include
                                            name="**/jackson-annotations-${jackson.version}.jar"/>
                                        <include name="**/jackson-core-${jackson.version}.jar"/>
                                        <include name="**/jackson-databind-${jackson.version}.jar"/>
                                        <include name="**/stateless4j-${stateless4j.version}.jar"/>
                                        <include name="**/servlet-${servlet.version}.jar"/>
                                        <include name="**/okhttp-${okhttp.version}.jar"/>
                                        <include name="**/okio-${okio.version}.jar"/>
                                    </fileset>
                                </copy>
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <groupId>org.apache.maven.plugins</groupId>
                <version>2.4</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <descriptors>
                                <descriptor>assembly.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <distributionManagement>
        <repository>
            <id>couchbase.public.repo</id>
            <name>Couchbase Release Repository</name>
            <url>http://files.couchbase.com/maven2/</url>
        </repository>
    </distributionManagement>
    <description>Couchbase Lite is an embedded lightweight, document-oriented (NoSQL), syncable database engine.</description>
  <name>com.couchbase.lite:couchbase-lite-android</name>
  <url>http://developer.couchbase.com/mobile/</url>
  <licenses>
    <license>
      <name>Couchbase, Inc. Community Edition License Agreement</name>
      <url>https://www.couchbase.com/binaries/content/assets/website/legal/ce-license-agreement.pdf</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <developers>
    <developer>
      <name>Couchbase Mobile</name>
      <email>mobile@couchbase.com</email>
      <organization>Couchbase</organization>
      <organizationUrl>http://www.couchbase.com</organizationUrl>
    </developer>
  </developers>
  <issueManagement>
    <system>github</system>
    <url>https://github.com/couchbase/couchbase-lite-android/issues</url>
  </issueManagement>
  <scm>
    <url>http://developer.couchbase.com/mobile/</url>
  </scm>
</project>
